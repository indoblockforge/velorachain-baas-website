name: Playground CI/CD Pipeline

on:
  push:
    branches:
      - main
      - playground/*
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Lint & Format
        run: npm run lint

      - name: Run Tests
        run: npm test

      - name: Build Playground
        run: npm run build

      - name: Generate & Validate OpenAPI Spec
        run: npm run openapi:generate && npm run openapi:validate

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: playground-build
          path: .next

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: indoblockforge/playground:latest

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to Vercel
        run: npx vercel --token ${{ secrets.VERCEL_TOKEN }} --prod

  notify:
    runs-on: ubuntu-latest
    needs: [build-test, docker-build, deploy-vercel]
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Playground CI/CD
          fields: repo,message,commit
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}